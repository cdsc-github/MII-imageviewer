--- 
--- UCLA Image Server Schema
--- 1/9/2006
--- jzweig
--- modified gweinger/jzweig 1/10/2006
--- database name = "ImageServer"
--- modified jzweig 2/8/2006
--- modified gweinger 12/2006-1/2007
--- modified buia 4/2007

CREATE SEQUENCE study_id_seq MINVALUE 0;
CREATE SEQUENCE series_id_seq MINVALUE 0;
CREATE SEQUENCE instance_id_seq MINVALUE 0;
CREATE SEQUENCE patient_id_seq MINVALUE 0;
CREATE SEQUENCE eav_string_long_id_seq MINVALUE 0;
CREATE SEQUENCE eav_short_seq MINVALUE 0;
CREATE SEQUENCE eav_boolean_seq MINVALUE 0;
CREATE SEQUENCE collection_id_seq MINVALUE 0;
CREATE SEQUENCE meta_of_attributes_id_seq MINVALUE 0;
CREATE SEQUENCE eav_int_id_seq MINVALUE 0;
CREATE SEQUENCE eav_string_short_id_seq MINVALUE 0;
CREATE SEQUENCE eav_double_id_seq MINVALUE 0;
CREATE SEQUENCE eav_float_id_seq MINVALUE 0;
CREATE SEQUENCE eav_set_id_seq MINVALUE 0;
CREATE SEQUENCE eav_array_id_seq MINVALUE 0;
CREATE SEQUENCE eav_array_element_id_seq MINVALUE 0;
CREATE SEQUENCE eav_map_id_seq MINVALUE 0;
CREATE SEQUENCE associated_data_id_seq MINVALUE 0;
CREATE SEQUENCE image_collection_id_seq MINVALUE 0;
CREATE SEQUENCE assoc_data_collection_id_seq MINVALUE 0;

CREATE TABLE PATIENT(
	ID INTEGER NOT NULL PRIMARY KEY,
	PAT_ID VARCHAR(256) UNIQUE,
	PAT_NAME VARCHAR(256),
	PAT_BIRTHDATE DATE,
	PAT_SEX VARCHAR(256),
	CREATED_TIME TIMESTAMP,
	UPDATED_TIME TIMESTAMP
);

CREATE TABLE STUDY(
	ID INTEGER NOT NULL PRIMARY KEY,
	PATIENT_FK INTEGER,
	STUDY_UID VARCHAR(256) NOT NULL,
	STUDY_ID VARCHAR(256),
	STUDY_DATETIME TIMESTAMP,
	ACCESSION_NO VARCHAR(256),
	REF_PHYSICIAN VARCHAR (256),
	STUDY_DESC VARCHAR (256),
	MODS_IN_STUDY VARCHAR(256), 
	INSTITUTION VARCHAR(256),	
	NUM_SERIES INTEGER NOT NULL,  
	NUM_INSTANCES INTEGER NOT NULL, 
	ARCHIVE_TALLY TEXT,		
	CREATED_TIME TIMESTAMP,
	UPDATED_TIME TIMESTAMP,
	FILE_PATH VARCHAR(256),
	CONSTRAINT SYS_FK_4 FOREIGN KEY(PATIENT_FK) REFERENCES PATIENT(ID)
);
--	MODS_IN_STUDY VARCHAR(256),  -- fill this
--	NUM_SERIES INTEGER NOT NULL,  -- fill this
--	NUM_INSTANCES INTEGER NOT NULL, -- fill this


CREATE TABLE SERIES(
	ID INTEGER NOT NULL PRIMARY KEY,
	STUDY_FK INTEGER NOT NULL,
	SERIES_IUID VARCHAR(256) NOT NULL,
	SERIES_NO VARCHAR(256),
	MODALITY VARCHAR(256),
	NUM_INSTANCES INTEGER NOT NULL, 
	CREATED_TIME TIMESTAMP,
 	UPDATED_TIME TIMESTAMP,
	SERIES_DESC VARCHAR (256), 	
	BODY_PART VARCHAR (256), 		
 	FILE_PATH VARCHAR(256),
	CONTRAST VARCHAR(256),
	MR_ACQUISITION_TYPE VARCHAR(256),
	SCANNING_SEQUENCE VARCHAR(256),
	SEQUENCE_NAME VARCHAR(256),
	IMAGE_TYPE VARCHAR(256) DEFAULT 'DICOM',	
	CONSTRAINT SYS_FK_19 FOREIGN KEY(STUDY_FK) REFERENCES STUDY(ID)
);
-- NUM_INSTANCES INTEGER NOT NULL,  -- fill this

CREATE TABLE INSTANCE(
	ID INTEGER NOT NULL PRIMARY KEY,
	SERIES_FK INTEGER NOT NULL,
	SOP_IUID VARCHAR(256),
	SOP_CUID VARCHAR(256),
	INST_NO VARCHAR(256),
	CONTENT_DATE TIMESTAMP,
	CREATED_TIME TIMESTAMP,
	UPDATED_TIME TIMESTAMP,
	ECHO_NUMBER VARCHAR(10),	
	FILE_PATH VARCHAR(256),
	FILE_SIZE INTEGER DEFAULT 0,	
	CONSTRAINT SYS_FK_28 FOREIGN KEY(SERIES_FK) REFERENCES SERIES(ID)
);

CREATE TABLE ASSOCIATED_DATA(
		ID INTEGER NOT NULL PRIMARY KEY,
		AUTHOR VARCHAR(128),
		DESCRIPTION VARCHAR(256),
		DATA_URI VARCHAR(256),
		FORMAT VARCHAR(256),
		DATA_GROUP VARCHAR(256),		
		TYPE INTEGER DEFAULT 0,
		CREATED_TIME TIMESTAMP,
		UPDATED_TIME TIMESTAMP,
		CLASS_NAME VARCHAR(256),
		ORDER_INDEX INTEGER DEFAULT 0,
		PERMISSIONS VARCHAR(6)
);

CREATE TABLE STUDY_ASSOC_DATA (
	FROM_ID INTEGER NOT NULL,
	DATA_ID INTEGER NOT NULL,
	ORDER_NO INTEGER DEFAULT 0
);

CREATE TABLE SERIES_ASSOC_DATA (
	FROM_ID INTEGER NOT NULL,
	DATA_ID INTEGER NOT NULL,
	ORDER_NO INTEGER DEFAULT 0
);

CREATE TABLE INSTANCE_ASSOC_DATA (
	FROM_ID INTEGER NOT NULL,
	DATA_ID INTEGER NOT NULL,
	ORDER_NO INTEGER DEFAULT 0
);

CREATE TABLE ASSOC_DATA_COLLECTION (
	ID INTEGER NOT NULL PRIMARY KEY,
	KEY VARCHAR(128) NOT NULL UNIQUE
);

CREATE TABLE ASSOC_DATA_COLLECTION_LIST (
	COLLECTION_ID INTEGER NOT NULL,
	DATA_ID INTEGER NOT NULL,
	ORDER_NO INTEGER NOT NULL DEFAULT 0,
	CONSTRAINT A_D_C_EL FOREIGN KEY(COLLECTION_ID) REFERENCES ASSOC_DATA_COLLECTION(ID)
);

CREATE TABLE IMAGE_COLLECTION (
		ID INTEGER NOT NULL PRIMARY KEY,
		AUTHOR VARCHAR(128),
		NAME VARCHAR(128) UNIQUE,		
		DESCRIPTION VARCHAR(256),
		TYPE VARCHAR(128)
);

CREATE TABLE IMAGE_COLLECTION_IMAGES (
	COLLECTION_ID INTEGER NOT NULL,
	IMAGE_ID INTEGER NOT NULL,
	ORDER_NO INTEGER DEFAULT 0,
	CONSTRAINT I_C_IMAGES FOREIGN KEY(IMAGE_ID) REFERENCES INSTANCE(ID),
	CONSTRAINT I_C_COLLECTION FOREIGN KEY(COLLECTION_ID) REFERENCES IMAGE_COLLECTION(ID)
);

CREATE TABLE IMAGE_COLLECTION_CHILDREN (
	COLLECTION_FROM INTEGER NOT NULL,
	COLLECTION_TO   INTEGER NOT NULL,
	ORDER_NO INTEGER DEFAULT 0,
	CONSTRAINT I_C_CHILDREN_FROM FOREIGN KEY(COLLECTION_FROM) REFERENCES IMAGE_COLLECTION(ID),
	CONSTRAINT I_C_CHILDREN_TO FOREIGN KEY(COLLECTION_TO) REFERENCES IMAGE_COLLECTION(ID)
);

CREATE TABLE IMAGE_COLLECTION_TAGS (
	COLLECTION_ID INTEGER NOT NULL,
	ORDER_NO INTEGER NOT NULL,
	TAG VARCHAR(256) NOT NULL
);

--Additional items for schema

--Dimensions of the image
--Field of view - series
--MR values
--Bit Depth of image
--Anatomy varchar - study or series
--Original Source of the image (varchar) e.g. UCLA pacs, etc - instance

-- need FILES Table

CREATE TABLE COLLECTION(
	ID INTEGER NOT NULL PRIMARY KEY,
	TYPE VARCHAR(256),
	SCOPE INTEGER NOT NULL,
	INSTANCE_UID VARCHAR(256) 
);


CREATE TABLE META_OF_ATTRIBUTES(
  ID INTEGER NOT NULL PRIMARY KEY,
	COLLECTION_ID INTEGER NOT NULL,
	ATTRIBUTE_NAME VARCHAR(256),
	DATA_TYPE INTEGER,
	MEASURE_UNIT VARCHAR(100),
	DESCRIPTION VARCHAR(256),
	CREATED_DATE DATE,
	LAST_MODIFIED_DATE DATE
);
-- SCOPE INTEGER NOT NULL, -- eg. Study = 1, Series = 2, Instance = 3

-- additional EAV Tables:  EAV_TEXT, EAV_BINARY, EAV_*  lookup data types for suggestions

CREATE TABLE EAV_INT(
	ID INTEGER NOT NULL PRIMARY KEY,
	SUBJECT_ID INTEGER,
	ATTRIBUTE_ID INTEGER,
	VALUE INTEGER NOT NULL,
	CONSTRAINT ATTRIBUTE_EXISTS_INT FOREIGN KEY(ATTRIBUTE_ID) REFERENCES META_OF_ATTRIBUTES(ID)
);

CREATE TABLE EAV_SHORT(
	ID INTEGER NOT NULL PRIMARY KEY,
	SUBJECT_ID INTEGER,
	ATTRIBUTE_ID INTEGER,
	VALUE SMALLINT NOT NULL,
	CONSTRAINT ATTRIBUTE_EXISTS_SHORT FOREIGN KEY(ATTRIBUTE_ID) REFERENCES META_OF_ATTRIBUTES(ID)
);


CREATE TABLE EAV_DOUBLE(
	ID INTEGER NOT NULL PRIMARY KEY,
	SUBJECT_ID INTEGER,
	ATTRIBUTE_ID INTEGER,
  VALUE DOUBLE PRECISION NOT NULL,
	CONSTRAINT ATTRIBUTE_EXISTS_DOUBLE FOREIGN KEY(ATTRIBUTE_ID) REFERENCES META_OF_ATTRIBUTES(ID)
);

CREATE TABLE EAV_FLOAT(
	ID INTEGER NOT NULL PRIMARY KEY,
	SUBJECT_ID INTEGER,
	ATTRIBUTE_ID INTEGER,
  VALUE FLOAT4 NOT NULL,
	CONSTRAINT ATTRIBUTE_EXISTS_FLOAT FOREIGN KEY(ATTRIBUTE_ID) REFERENCES META_OF_ATTRIBUTES(ID)
);

CREATE TABLE EAV_STRING_SHORT(
	ID INTEGER NOT NULL PRIMARY KEY,
	SUBJECT_ID INTEGER,
	ATTRIBUTE_ID INTEGER,
	VALUE VARCHAR(256),	
	CONSTRAINT ATTRIBUTE_EXISTS_STRING_SHORT FOREIGN KEY(ATTRIBUTE_ID) REFERENCES META_OF_ATTRIBUTES(ID)
);

CREATE TABLE EAV_STRING_LONG(
	ID INTEGER NOT NULL PRIMARY KEY,
	SUBJECT_ID INTEGER,
	ATTRIBUTE_ID INTEGER,
	VALUE TEXT NOT NULL,
	CONSTRAINT ATTRIBUTE_EXISTS_STRING_LONG FOREIGN KEY(ATTRIBUTE_ID) REFERENCES META_OF_ATTRIBUTES(ID)
);

CREATE TABLE EAV_BOOLEAN(
	ID INTEGER NOT NULL PRIMARY KEY,
	SUBJECT_ID INTEGER,
	ATTRIBUTE_ID INTEGER,
	VALUE BOOLEAN NOT NULL,	
	CONSTRAINT ATTRIBUTE_EXISTS_BOOLEAN FOREIGN KEY(ATTRIBUTE_ID) REFERENCES META_OF_ATTRIBUTES(ID)
);

CREATE TABLE EAV_DATE(
	ID INTEGER NOT NULL PRIMARY KEY,
	SUBJECT_ID INTEGER,
	ATTRIBUTE_ID INTEGER,
	VALUE DATE NOT NULL,
	CONSTRAINT ATTRIBUTE_EXISTS_DATE FOREIGN KEY(ATTRIBUTE_ID) REFERENCES META_OF_ATTRIBUTES(ID)
);

CREATE TABLE EAV_SET(
	ID INTEGER NOT NULL PRIMARY KEY,
	ATTRIBUTE_ID INTEGER NOT NULL,
	CONSTRAINT ATTRIBUTE_EXISTS_SET FOREIGN KEY(ATTRIBUTE_ID) REFERENCES META_OF_ATTRIBUTES(ID)
);

CREATE TABLE EAV_SET_COLLECTION(
	SET_ID INTEGER NOT NULL,
	COLLECTION_ID INTEGER,
	CONSTRAINT SET_EXISTS FOREIGN KEY(SET_ID) REFERENCES EAV_SET(ID),
	CONSTRAINT COLLECTION_EXISTS_SET_COLLECTION FOREIGN KEY(COLLECTION_ID) REFERENCES COLLECTION(ID)
);

CREATE TABLE EAV_ARRAY(
	ID INTEGER NOT NULL PRIMARY KEY,
	ATTRIBUTE_ID INTEGER NOT NULL,
	CONSTRAINT ATTRIBUTE_EXISTS_ARRAY FOREIGN KEY(ATTRIBUTE_ID) REFERENCES META_OF_ATTRIBUTES(ID)
);

CREATE TABLE EAV_ARRAY_ELEMENT(
	ID INTEGER NOT NULL PRIMARY KEY,
	ARRAY_ID INTEGER NOT NULL,
	DATA_TYPE INTEGER,
	ARRAY_INDEX INTEGER NOT NULL,
	VALUE_ID INTEGER NOT NULL,
	CONSTRAINT ARRAY_EXISTS_ARRAY_ELEMENT FOREIGN KEY(ARRAY_ID) REFERENCES EAV_ARRAY(ID)
);

CREATE TABLE EAV_MAP(
	ID INTEGER NOT NULL PRIMARY KEY,
	ATTRIBUTE_ID INTEGER NOT NULL,
	KEY_TYPE INTEGER,
	VALUE_TYPE INTEGER,
	CONSTRAINT ATTRIBUTE_EXISTS_EAV_MAP FOREIGN KEY(ATTRIBUTE_ID) REFERENCES META_OF_ATTRIBUTES(ID)
);

CREATE TABLE EAV_MAP_ENTRY(
	ID INTEGER NOT NULL PRIMARY KEY,
	MAP_ID INTEGER NOT NULL,
	KEY_ID INTEGER NOT NULL,
	VALUE_ID INTEGER NOT NULL,
	CONSTRAINT ARRAY_EXISTS_MAP_ENTRY FOREIGN KEY(MAP_ID) REFERENCES EAV_MAP(ID)
);

CREATE TABLE EAV_DATA_TYPES(
	ID INTEGER NOT NULL PRIMARY KEY,
	NAME VARCHAR(256) NOT NULL,
	DESCRIPTION TEXT
);

create index pat_id_idx on patient (pat_id);
create index study_uid_idx on study(study_uid);
create index series_uid_idx on series(series_iuid);
create index instance_uid_idx on instance(sop_iuid);
create index instance_file_path_idx on instance(file_path);

INSERT INTO EAV_DATA_TYPES VALUES(1,'SET','');
INSERT INTO EAV_DATA_TYPES VALUES(2,'SHORT','');
INSERT INTO EAV_DATA_TYPES VALUES(3,'ARRAY','');
INSERT INTO EAV_DATA_TYPES VALUES(4,'STRING SHORT','');
INSERT INTO EAV_DATA_TYPES VALUES(5,'BOOLEAN','');
INSERT INTO EAV_DATA_TYPES VALUES(6,'DATE','');
INSERT INTO EAV_DATA_TYPES VALUES(7,'DOUBLE','');
INSERT INTO EAV_DATA_TYPES VALUES(8,'FLOAT','');
INSERT INTO EAV_DATA_TYPES VALUES(9,'MAP','');
